# Global Docker Configuration for MCP Python SDK DevContainer
# This file contains all global variables and settings used across Docker Compose files
# Format: YAML for easy integration with Docker Compose

# =============================================================================
# GLOBAL ENVIRONMENT VARIABLES
# =============================================================================
x-global-env: &global-env
  # Network Configuration
  GLOBAL_NETWORK_MTU: "9000"
  GLOBAL_NETWORK_SUBNET: "172.20.0.0/16"
  GLOBAL_NETWORK_GATEWAY: "172.20.0.1"
  
  # Python Optimization
  GLOBAL_PYTHONOPTIMIZE: "2"
  GLOBAL_PYTHONUNBUFFERED: "1"
  GLOBAL_PYTHONDONTWRITEBYTECODE: "1"
  GLOBAL_PYTHONHASHSEED: "0"
  GLOBAL_PYTHONSTARTUP: "/workspaces/python-sdk/.devcontainer/config/python-startup.py"
  GLOBAL_PYTHONPATH: "/workspaces/python-sdk/src"
  
  # Performance Settings
  GLOBAL_MALLOC_CONF: "dirty_decay_ms:1000,muzzy_decay_ms:1000"
  GLOBAL_LD_PRELOAD: "/usr/lib/x86_64-linux-gnu/libjemalloc.so.2"
  
  # GPU Configuration
  GLOBAL_NVIDIA_VISIBLE_DEVICES: "all"
  GLOBAL_NVIDIA_DRIVER_CAPABILITIES: "all"
  GLOBAL_CUDA_VISIBLE_DEVICES: "all"
  
  # Cache Directories
  GLOBAL_CACHE_ROOT: "/opt/mcp-cache"
  GLOBAL_NUMBA_CACHE_DIR: "/opt/mcp-cache/numba"
  GLOBAL_PYTHON_CACHE_SIZE: "8G"
  GLOBAL_WHEELS_CACHE_SIZE: "4G"
  GLOBAL_BYTECODE_CACHE_SIZE: "2G"
  GLOBAL_NUMBA_CACHE_SIZE: "4G"
  
  # Resource Limits
  GLOBAL_TMPFS_SIZE: "32G"
  GLOBAL_CONTAINER_SHM_SIZE: "16G"
  GLOBAL_CPU_LIMIT: "0"
  GLOBAL_MEMORY_LIMIT: "0"
  GLOBAL_CPU_RESERVATION: "4"
  GLOBAL_MEMORY_RESERVATION: "8G"
  
  # Database Configuration
  GLOBAL_POSTGRES_USER: "postgres"
  GLOBAL_POSTGRES_DB: "postgres"
  GLOBAL_POSTGRES_PASSWORD: "postgres"
  GLOBAL_POSTGRES_PORT: "5432"
  GLOBAL_POSTGRES_DATA_PATH: "/opt/postgres-data"
  
  # Redis Configuration
  GLOBAL_REDIS_PORT: "6379"
  GLOBAL_REDIS_MAXMEMORY: "4gb"
  
  # Build Configuration
  GLOBAL_BUILDKIT_INLINE_CACHE: "1"
  GLOBAL_DOCKER_BUILDKIT: "1"
  
  # Security Settings
  GLOBAL_PRIVILEGED_MODE: "true"
  GLOBAL_SECURITY_OPT: "seccomp:unconfined"
  GLOBAL_APPARMOR_PROFILE: "apparmor:unconfined"
  
  # System Optimization
  GLOBAL_ULIMIT_MEMLOCK_SOFT: "-1"
  GLOBAL_ULIMIT_MEMLOCK_HARD: "-1"
  GLOBAL_ULIMIT_STACK_SOFT: "67108864"
  GLOBAL_ULIMIT_STACK_HARD: "67108864"
  GLOBAL_ULIMIT_NOFILE_SOFT: "1048576"
  GLOBAL_ULIMIT_NOFILE_HARD: "1048576"
  
  # Sysctls for Performance
  GLOBAL_SYSCTL_SOMAXCONN: "32768"
  GLOBAL_SYSCTL_TCP_MAX_SYN_BACKLOG: "32768"
  GLOBAL_SYSCTL_NETDEV_MAX_BACKLOG: "32768"
  GLOBAL_SYSCTL_VM_SWAPPINESS: "1"
  GLOBAL_SYSCTL_VM_DIRTY_RATIO: "80"
  GLOBAL_SYSCTL_VM_DIRTY_BACKGROUND_RATIO: "5"
  GLOBAL_SYSCTL_VM_VFS_CACHE_PRESSURE: "50"
  
  # Python Development Package Versions
  GLOBAL_UV_VERSION: "0.5.0"
  GLOBAL_FASTAPI_VERSION: "0.115.0"
  GLOBAL_UVICORN_VERSION: "0.32.0"
  GLOBAL_HTTPX_VERSION: "0.28.0"
  GLOBAL_PYDANTIC_VERSION: "2.10.0"
  GLOBAL_ANYIO_VERSION: "4.6.0"
  GLOBAL_PYTEST_VERSION: "8.3.0"
  GLOBAL_PYTEST_ASYNCIO_VERSION: "0.24.0"
  GLOBAL_BLACK_VERSION: "24.10.0"
  GLOBAL_RUFF_VERSION: "0.8.0"
  
  # Performance Optimization Package Versions
  GLOBAL_UVLOOP_VERSION: "0.21.0"
  GLOBAL_ORJSON_VERSION: "3.10.0"
  GLOBAL_CYTHON_VERSION: "3.0.11"
  GLOBAL_NUMBA_VERSION: "0.60.0"
  GLOBAL_PSUTIL_VERSION: "6.1.0"
  GLOBAL_JEMALLOC_VERSION: "2.0.0"
  
  # Python Package Installation Options
  GLOBAL_PIP_NO_CACHE_DIR: "false"
  GLOBAL_PIP_DISABLE_PIP_VERSION_CHECK: "true"
  GLOBAL_PIP_ROOT_USER_ACTION: "ignore"
  GLOBAL_UV_CACHE_DIR: "/opt/mcp-cache/uv"
  GLOBAL_UV_PYTHON: "3.12"
  GLOBAL_POSTGRES_DATA_PATH: "/opt/postgres-data"

# =============================================================================
# DOCKER COMPOSE CONFIGURATIONS
# =============================================================================

networks:
  default:
    name: mcp-network
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: "9000"
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
    ipam:
      driver: default
      config:
        - subnet: "172.20.0.0/16"
          gateway: "172.20.0.1"

volumes:
  python-cache-volume:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: "size=8G,uid=1000,gid=1000,mode=0755"
  
  python-wheels-volume:
    driver: local 
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: "size=4G,uid=1000,gid=1000,mode=0755"
  
  python-bytecode-volume:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: "size=2G,uid=1000,gid=1000,mode=0755"
  
  numba-cache-volume:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: "size=4G,uid=1000,gid=1000,mode=0755"
  
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/opt/postgres-data"

# =============================================================================
# REUSABLE SERVICE TEMPLATES
# =============================================================================

# Common GPU Configuration
x-gpu-config: &gpu-config
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: all
            capabilities: [gpu, compute, utility]

# Common Performance Configuration
x-performance-config: &performance-config
  privileged: true
  init: true
  security_opt:
    - "seccomp:unconfined"
    - "apparmor:unconfined"
  ulimits:
    memlock:
      soft: -1
      hard: -1
    stack:
      soft: 67108864
      hard: 67108864
    nofile:
      soft: 1048576
      hard: 1048576
  sysctls:
    - "net.core.somaxconn=32768"
    - "net.ipv4.tcp_max_syn_backlog=32768"
    - "net.core.netdev_max_backlog=32768"
    - "vm.swappiness=1"
    - "vm.dirty_ratio=80"
    - "vm.dirty_background_ratio=5"
    - "vm.vfs_cache_pressure=50"

# Common Tmpfs Configuration
x-tmpfs-config: &tmpfs-config
  tmpfs:
    - "/tmp:size=32G,mode=1777"
    - "/dev/shm:size=16G,mode=1777"
    - "/var/tmp:size=8G,mode=1777"

# Unlimited Resources Template
x-unlimited-resources: &unlimited-resources
  deploy:
    resources:
      limits:
        cpus: "0"
        memory: "0"
      reservations:
        cpus: "4"
        memory: "8G"

# =============================================================================
# SERVICE CONFIGURATIONS
# =============================================================================

x-app-service: &app-service
  <<: *performance-config
  <<: *gpu-config
  <<: *unlimited-resources
  environment: *global-env
  volumes:
    - type: bind
      source: "/workspaces/python-sdk"
      target: "/workspaces/python-sdk"
    - type: volume
      source: python-cache-volume
      target: "/opt/mcp-cache/python"
    - type: volume
      source: python-wheels-volume
      target: "/opt/mcp-cache/wheels"
    - type: volume
      source: python-bytecode-volume
      target: "/opt/mcp-cache/bytecode"
    - type: volume
      source: numba-cache-volume
      target: "/opt/mcp-cache/numba"
  tmpfs:
    - "/tmp:size=32G,mode=1777"
    - "/dev/shm:size=16G,mode=1777"
    - "/var/tmp:size=8G,mode=1777"

x-postgres-service: &postgres-service
  <<: *performance-config
  <<: *unlimited-resources
  environment:
    <<: *global-env
    POSTGRES_USER: "postgres"
    POSTGRES_DB: "postgres"
    POSTGRES_PASSWORD: "postgres"
    POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
  volumes:
    - type: volume
      source: postgres-data
      target: "/var/lib/postgresql/data"
  tmpfs:
    - "/tmp:size=4G,mode=1777"
    - "/var/run/postgresql:size=1G,mode=1777"
  command: >
    postgres
    -c shared_preload_libraries=pg_stat_statements,pg_buffercache
    -c shared_buffers=2GB
    -c effective_cache_size=6GB
    -c maintenance_work_mem=512MB
    -c checkpoint_completion_target=0.9
    -c wal_buffers=64MB
    -c default_statistics_target=100
    -c random_page_cost=1.1
    -c effective_io_concurrency=400
    -c work_mem=128MB
    -c min_wal_size=2GB
    -c max_wal_size=8GB
    -c checkpoint_timeout=10min
    -c max_connections=200
    -c synchronous_commit=off
    -c fsync=off
    -c full_page_writes=off

x-redis-service: &redis-service
  <<: *performance-config
  <<: *unlimited-resources
  environment: *global-env
  tmpfs:
    - "/data:size=4G,mode=1777"
    - "/tmp:size=1G,mode=1777"
  command: >
    redis-server
    --maxmemory ${GLOBAL_REDIS_MAXMEMORY:-4gb}
    --maxmemory-policy allkeys-lru
    --save ""
    --appendonly no
    --tcp-keepalive 60
    --tcp-backlog 511
    --databases 16
    --maxclients 10000
    --timeout 0
    --io-threads 4
    --io-threads-do-reads yes
    --lazyfree-lazy-eviction yes
    --lazyfree-lazy-expire yes
    --lazyfree-lazy-server-del yes