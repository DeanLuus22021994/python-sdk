# MCP Application Service Configuration
# Main application service for Docker Swarm
# Uses global configuration variables with GLOBAL_ prefix

services:
  mcp-python-sdk:
    image: ${DEV_CONTAINER_NAME:-mcp-python-sdk-dev}:latest
    deploy:
      replicas: ${SWARM_REPLICAS:-1}
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "${GLOBAL_CPU_LIMIT:-0}"
          memory: "${GLOBAL_MEMORY_LIMIT:-0}"
        reservations:
          cpus: "${GLOBAL_CPU_RESERVATION:-4}"
          memory: "${GLOBAL_MEMORY_RESERVATION:-8G}"
      restart_policy:
        condition: on-failure
        max_attempts: 3
    ports:
      - "${MCP_SERVER_PORT:-5000}:5000"
      - "${UVICORN_PORT:-8080}:8080"
    volumes:
      - mcp-cache-volume:/opt/mcp-cache
      - python-wheels:/opt/mcp-cache/wheels
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    tmpfs:
      - /tmp:size=${GLOBAL_TMPFS_SIZE:-32G},mode=1777
    shm_size: ${GLOBAL_CONTAINER_SHM_SIZE:-16G}
    privileged: ${GLOBAL_PRIVILEGED_MODE:-true}
    security_opt:
      - ${GLOBAL_SECURITY_OPT:-seccomp:unconfined}
      - ${GLOBAL_APPARMOR_PROFILE:-apparmor:unconfined}
    devices:
      - "/dev/dri:/dev/dri"
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=${GLOBAL_NVIDIA_VISIBLE_DEVICES:-all}
      - NVIDIA_DRIVER_CAPABILITIES=${GLOBAL_NVIDIA_DRIVER_CAPABILITIES:-all}
      - CUDA_VISIBLE_DEVICES=${GLOBAL_CUDA_VISIBLE_DEVICES:-all}
    networks:
      - mcp-network

volumes:
  mcp-cache-volume:
    driver: local
  python-wheels:
    driver: local

networks:
  mcp-network:
    driver: overlay
    attachable: true
