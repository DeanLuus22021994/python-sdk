# PostgreSQL Database Service Configuration
# High-performance PostgreSQL for Docker Swarm
# Uses global configuration variables with GLOBAL_ prefix

services:
  postgres:
    image: postgres:16-alpine
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "${GLOBAL_CPU_LIMIT:-0}"
          memory: "${GLOBAL_MEMORY_LIMIT:-0}"
        reservations:
          cpus: '2'
          memory: 4G
      restart_policy:
        condition: on-failure
        max_attempts: 3
    environment:
      - POSTGRES_USER=${GLOBAL_POSTGRES_USER:-postgres}
      - POSTGRES_DB=${GLOBAL_POSTGRES_DB:-postgres}
      - POSTGRES_PASSWORD=${GLOBAL_POSTGRES_PASSWORD:-postgres}
      - POSTGRES_INITDB_ARGS=--data-checksums --wal-segsize=64 --auth-local=trust --auth-host=md5
    ports:
      - "${GLOBAL_POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-config:/etc/postgresql
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements,pg_buffercache
      -c shared_buffers=2GB
      -c effective_cache_size=6GB
      -c maintenance_work_mem=512MB
      -c max_connections=200
      -c max_worker_processes=32
      -c synchronous_commit=off
      -c fsync=off
    networks:
      - mcp-network

volumes:
  postgres-data:
    driver: local
  postgres-config:
    driver: local

networks:
  mcp-network:
    external: true