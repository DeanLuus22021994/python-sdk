# syntax=docker/dockerfile:1.4
# MCP Python SDK - Optimized Multi-Stage Dockerfile
# Built on python:slim with maximum performance optimizations
# Uses global build arguments for consistency

# Global build arguments from docker-globals.env
ARG GLOBAL_BUILDKIT_INLINE_CACHE=1
ARG GLOBAL_DOCKER_BUILDKIT=1
ARG GLOBAL_PYTHONOPTIMIZE=2
ARG GLOBAL_PYTHONHASHSEED=0

# Stage 1: Base Python Environment
FROM python:3.12-slim AS python-base

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONOPTIMIZE=${GLOBAL_PYTHONOPTIMIZE:-2} \
    PYTHONHASHSEED=${GLOBAL_PYTHONHASHSEED:-0} \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=0 \
    PIP_COMPILE=1

# Create optimized user and directories using global cache paths
RUN groupadd -r mcp && useradd -r -g mcp mcp && \
    mkdir -p /opt/mcp-cache/{python,wheels,bytecode,numba,cuda} && \
    chown -R mcp:mcp /opt/mcp-cache

# Install essential system packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    libjemalloc2 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install UV for ultra-fast Python package management
RUN pip install --no-cache-dir uv

# Stage 2: Development Tools
FROM python-base AS dev-tools

RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    build-essential \
    gcc-11 \
    g++-11 \
    htop \
    iotop \
    sysstat \
    net-tools \
    procps \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Stage 3: Final Runtime
FROM dev-tools AS runtime

COPY docker/components/requirements-dev.txt /tmp/
RUN uv pip install --system --no-cache-dir -r /tmp/requirements-dev.txt && \
    rm /tmp/requirements-dev.txt && \
    find /usr/local -name "*.pyc" -delete && \
    find /usr/local -name "__pycache__" -type d -exec rm -rf {} + || true

USER mcp
WORKDIR /workspaces

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import sys; sys.exit(0)"

CMD ["sleep", "infinity"]
